jwt:
  signing-key: e161ff6f-50b6-4c00-96b5-f7ac7f61455f #jwt签名
  expires-time: 168 #过期时间（单位：小时）
  buffer-time: 86400 # 缓冲时间
  issuer: blingder # 签发者
zap:
  level: info # 级别,这个级别以上的日志都会被记录
  prefix: '[myPapers]' # 日志前缀
  format: console # 输出格式
  director: log # 日志文件夹
  encode-level: LowercaseColorLevelEncoder # 编码级
  stacktrace-key: stacktrace #栈名
  max-age: 30 # 日志留存时间
  show-line: true # 显示行
  log-in-console: true # 输出控制台
system:
  env: develop # 环境值
  addr: 8887 # 端口值
  #use-ssl: true
  #ssl-cert: /etc/ssl/certs/blockchain-fullchain.cer
  #ssl-key: /etc/ssl/private/blockchain-cert.key
  db-type: mysql # 数据库类型
  oss-type: local # Oss类型
  use-multipoint: false # 多点登录拦截
  use-redis: false # 使用redis
  iplimit-count: 15000 #
  iplimit-time: 3600 #
  start-time: "2020-07-01"
  machine-id: 1
captcha:
  key-long: 6 # 验证码长度
  img-width: 240 # 验证码宽度
  img-height: 80 # 验证码高度
mysql:
  path: localhost # 服务器地址:端口
  #  path: MySQL80 # 服务器地址:端口
  port: "3306" # :端口
  config: charset=utf8mb4&parseTime=True&loc=Local # 高级配置
  db-name: my_papers # 数据库名
  username: root # 数据库用户名
  password: root # 数据库密码
  max-idle-conns: 10 # 空闲中的最大连接数
  max-open-conns: 100 # 打开到数据库的最大连接数
  log-mode: error # 是否开启Gorm全局日志
  log-zap: false # 是否通过zap写入日志文件
cors:
  mode: allow-all
  whitelist:
    - allow-origin: example1.com
      allow-methods: GET, POST
      allow-headers: content-type
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers,
        Content-Type
      allow-credentials: true
    - allow-origin: example2.com
      allow-methods: GET, POST
      allow-headers: content-type
      expose-headers: Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers,
        Content-Type
      allow-credentials: true
#image-path: http://127.0.0.1:8080/image/ # 传统图片路径 port是nginx监听的端口
image-path: http://localhost:8887/image/ # 传统图片路径 port是nginx监听的端口
#image-path: https://172.16.170.195:443/image/ # 传统图片路径 port是nginx监听的端口
ipfs:
  #host: 172.16.170.195
  #port: 5001
  host: 127.0.0.1
  port: 5001
  #host: 107.155.56.166
  #port: 5001
  gateway-port: 8080
  gateway-path: /ipfs/
nginx:
  host: localhost
  port: 8887
# 区块链相关配置
blockchain:
  # 以太坊节点配置
  eth-node-url: "https://rpc.paperschain.io"
  chain-id: 408
  gas-limit: 300000                          # Gas限制
  decimals: 18
  # 智能合约配置
  mps-contract-address: "0xe49D299E6Cc29fD264A77D43Ce76dB461C9F2434"    # MPS代币合约地址
  erc20-contract-address: "0x3f63992C47aB0Ad8b83B0d31b23b265996264474"  # ERC20合约地址
  erc721-contract-address: "0x813Dfc691e771bDbAD90B68ABb584457FA69D8a9" # ERC721合约地址
  marketplace-contract-address: "0xe699ED3A02460E3AcE9bf157C5F1098CEb10C2B0" # 市场合约地址
  # 管理员配置
  admin-private-key: ""  # 管理员私钥
  admin-address: "your-admin-address-here"          # 管理员地址

# 微信支付配置
wxpay:
  wxpay-type: "wx"
  # 基础配置
  app-id: "your-app-id-here"        # 公众号ID
  mch-id: "your-mch-id-here"        # 商户号
  key: "your-key-here"              # API密钥
  # 支付配置
  trade-type: "JSAPI"               # 交易类型
  sign-type: "MD5"                  # 签名类型
  # URL配置
  notify-url: "http://www.mypapers.io/mps/wxpay/notify"  # 支付回调通知地址
  success-url: "http://www.mypapers.io/payment/success"       # 支付成功跳转页面
  fail-url: "http://www.mypapers.io/payment/fail"            # 支付失败跳转页面
# 支付宝支付配置
alipay:
  ali-pay-type: "alipay"
  # 基础配置
  app-id: "2021000147656637"        # APPID
  private-key: ""
  charset: "utf-8"                         # 请求使用的编码格式
  format: "json"                   # 请求格式

  # 证书配置
  public-cert: "utils/alipay/cert/appPublicCert.crt" # 应用公钥证书
  paypublic-cert: "utils/alipay/cert/alipayPublicCert.crt" # 支付宝公钥证书
  payroot-cert: "utils/alipay/cert/alipayRootCert.crt" # 支付宝根证书

  # 支付配置
  qrpay-mode: "2"                 # PC扫码方式
  qrcode_width: "100"              # 自定义二维码宽度,qr_pay_mode=4时该参数有效
  sign-type: "RSA2"                  # 签名类型
  is-prod: false
  # URL配置
  #notify-url: "http://www.mypapers.io/api/mps/alipay/notify"  # 支付回调通知地址
  notify-url: "http://4a98r9.natappfree.cc/mypapers/notify/alipay/notify"  # 支付回调通知地址
# 系统业务配置
business:
  mps-exchange-rate: 1.0       # MPS兑换比率（1 CNY = 1 mps）
  order-timeout: 1800               # 订单超时时间（秒）
  min-recharge-amount: 1.0          # 最小充值金额
  max-recharge-amount: 10000.0      # 最大充值金额
  account-type: 1  #收款账户类型。 1：对公（在金融机构开设的公司账户） 2：对私（在金融机构开设的个人账户）
  inst-name: "11"  #银行卡卡开户银行
  register-mps-amount: 1
#邮箱配置 qq邮箱
smtp:
  host: smtp.qq.com
  port: 587
  username: 1195561085@qq.com
  password: alkytadzquragcej

#redis 配置
redis:
  addr: "localhost:6379"
  password: ""
  db: 0

#rabbitmq 配置
rabbitmq-config:
  queue-name: "mps"          #队列名称
  exchange:              #交换机名称
  key:                   #bind Key 名称
  mqurl: "amqp://mps:mps@127.0.0.1:5672/mps"     #连接信息,这个信息是固定不变的amqp://事固定参数后面两个是用户名密码ip地址端口号Virtual Host

